/// <reference types="node" />
import { StdioOptions } from 'child_process';
import { DriftAnalysis, DriftctlExecutionResult, DriftCTLOptions, GenDriftIgnoreOptions } from './types';
export declare const driftctlVersion = "v0.23.0";
export declare const DCTL_EXIT_CODES: {
    EXIT_IN_SYNC: number;
    EXIT_NOT_IN_SYNC: number;
    EXIT_ERROR: number;
};
export declare const generateArgs: (options: DriftCTLOptions) => string[];
export declare const generateGenDriftIgnoreFlags: (options: GenDriftIgnoreOptions) => string[];
export declare function translateExitCode(exitCode: number | null): number;
export declare const parseDriftAnalysisResults: (input: string) => DriftAnalysis;
export declare const runDriftCTL: ({ options, input, stdio, }: {
    options: DriftCTLOptions;
    input?: string | undefined;
    stdio?: "pipe" | "ignore" | "inherit" | (number | import("stream").Stream | "pipe" | "ignore" | "inherit" | "ipc" | null | undefined)[] | undefined;
}) => Promise<DriftctlExecutionResult>;
